@{
  Layout = "_Layout";
}

@model Library.Models.Book
@using Library.Models

<h3>Add a new book</h3>

@using (Html.BeginForm())
{
  @Html.LabelFor(model => model.Title)
  @Html.TextBoxFor(model => model.Title)
  
  <label for="authorId">Author ID: </label>
  <input list="authors" name="author" id="authorId">
  <span id='name-field'></span>
  <datalist id="authors"> 
  @foreach (Author author in ViewBag.AuthorList)
  {
    <option value=@author.AuthorId>@author.Name</option>
  }
  </datalist>
  <br>
  <br>
  <input type="submit" value="Add new book" class="btn btn-primary" />
}

<label for="browser">Choose your browser from the list:</label>
<input list="browsers" name="browser" id="browser">

 <datalist id="browsers">
  <option value="Edge">
  <option value="Firefox">
  <option value="Chrome">
  <option value="Opera">
  <option value="Safari">
  </datalist>


  <p>@Html.ActionLink("Show all books", "Index")</p>

  <script type=text/javascript>
    function fetchAuthorName(){
      let authorId = document.getElementById("authorId").value;
      alert(authorId);
      fetch(`/Authors/GetAuthorName/${authorId}`, {
        method: 'GET',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        }
      })
      .then(response => response.json())
      .then(response => {
        let author = JSON.parse(response);
        let nameField = document.getElementById('name-field');
        alert(author);
        nameField.innertext = author.Name;
      })
    }

    document.getElementById("authorId").addEventListener("change", e=> {
      fetchAuthorName();
    })
  </script>